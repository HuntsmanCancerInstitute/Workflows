# Bash script to run inside the container
# 7 February 2019
# David.Nix@Hci.Utah.Edu
# Huntsman Cancer Institute

set -e
cd $jobDir

# Read params and files
tumorBam=`readlink -f *.bam`
allThreads=$(nproc)
allRam=$(expr `free -g | grep -oP '\d+' | head -n 1` - 2)

# Print params
echo -n jobDir"     : "; echo $jobDir
echo -n name"       : "; echo $name
echo -n dataBundle" : "; echo $dataBundle
echo -n threads"    : "; echo $allThreads
echo -n ram"        : "; echo $allRam
echo -n host"       : "; echo $(hostname)
echo -n tumorBam"   : "; echo $tumorBam
echo


/BioApps/Miniconda3/bin/snakemake -p -T \
--cores $allThreads \
--snakefile *.sm \
--config \
allThreads=$allThreads \
allRam=$allRam \
regionsForAnalysis=$dataBundle/Bed/Foundation/hg38FoundationMergedCdxHemeOnePad50bp.bed.gz \
indexFasta=$dataBundle/Indexes/B38IndexForBwa-0.7.17/hs38DH.fa \
mpileup=$dataBundle/MpileupBkg/Hg38AvatarBkgnd/bkg.mpileup_DP20MS3.txt.gz \
dbsnp=$dataBundle/Vcfs/dbsnp_146.hg38.vcf.gz \
queryDataDir=$dataBundle/QueryAPI/Data \
queryIndexDir=$dataBundle/QueryAPI/Index \
queryFileFilter=Hg38/Somatic/Foundation \
tumorBam=$tumorBam \
normalBam=$dataBundle/Bam/Hg38_300xNA12878/na12878_300X_FoundationMergedCdxHemeOnePad50bp.bam \
genomeBuild=Hg38 \
name=$name \
minTumorAlignmentDepth=50 \
minNormalAlignmentDepth=20 \
minTumorAltCount=3 \
minTumorAF=0.01 \
maxNormalAF=0.6 \
minTNRatio=2 \
minTNDiff=0.01 \
fdrTier=1 \
minBKZ=3

# Notes
## regionsForAnalysis - a sorted, bgzipped, and tabix indexed bed file of regions to report variants. See https://github.com/samtools/htslib
## indexFasta - the same fasta file used in sample alignment. Also needed are the index xxx.fa.fai and xxx.dict files.
## mpileup - a multi sample background mpileup file of 10-25 normal bam files. See http://bioserver.hci.utah.edu/USeq/Documentation/cmdLnMenus.html#VCFBackgroundChecker
## query Data and Index dirs - are those created by the QueryIndexer App for use by the VCFCallFrequency USeq tool.
## queryFileFilter - relative file path in the QueryData dir that determines what vcf and bed files to use in calculating each vcfCallFrequency.
## USeq - launch each app to see cmd line options

# Replace first and last lines above with the following to get dag svg graph
	# /BioApps/Miniconda3/bin/snakemake --dag \
	# allRam=$allRam | dot -Tsvg > $name"_dag.svg"

