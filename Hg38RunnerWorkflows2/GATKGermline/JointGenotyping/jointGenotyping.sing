# Bash script to run inside the container
# 12 July 2022
# David.Nix@Hci.Utah.Edu
# Huntsman Cancer Institute

set -e; cd $jobDir; start=$(date +'%s'); rm -f FAILED COMPLETE QUEUED; touch STARTED
echo -e "\n---------- Starting -------- $((($(date +'%s') - $start)/60)) min"

# Resources
allThreads=$(nproc)
allRam=$(expr `free -g | grep -oP '\d+' | head -n 1`)
name=${PWD##*/}

# Print params
echo -n jobDir"     : "; echo $jobDir
echo -n tmpDir"     : "; echo $tmpDir
echo -n name"       : "; echo $name
echo -n dataBundle" : "; echo $dataBundle
echo -n threads"    : "; echo $allThreads
echo -n ram"        : "; echo $allRam
echo -n host"       : "; echo $(hostname); echo

# Launch snakemake with these settings
snakemake -p --cores $allThreads \
--stats $name"_Hg38_snakemake.stats.json" \
--snakefile *.sm \
--configfile *.yaml \
--config \
name=$name \
dataBundle=$dataBundle \
tmpDir=$tmpDir \
jobDir=$jobDir \
allThreads=$allThreads \
allRam=$allRam 

echo -e "\n---------- Complete! -------- $((($(date +'%s') - $start)/60)) min total"

# Final cleanup
mkdir -p RunScripts
mv -f jointGeno*  RunScripts/
mv -f  *.yaml RunScripts/ &> /dev/null || true
cp slurm* Logs/ &> /dev/null || true
mv -f *snakemake.stats.json Logs/ &> /dev/null || true
rm -rf .snakemake STARTED RESTART* QUEUED slurm* $tmpDir




# Replace first and last lines above with the following to get dag svg graph
	# snakemake --dag \
	# allRam=$allRam | dot -Tsvg > $name"_dag.svg"
