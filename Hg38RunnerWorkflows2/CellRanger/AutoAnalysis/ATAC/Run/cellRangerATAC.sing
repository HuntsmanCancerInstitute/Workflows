# Bash script to run inside the container
# 6 May 2025
# David.Nix@Hci.Utah.Edu
# Huntsman Cancer Institute

set -e
cd $jobDir

# Read info
allThreads=$(nproc)
allRam=$(expr `free -g | grep -oP '\d+' | head -n 1` - 2)
name=${PWD##*/}

# Print params
echo -n jobDir"       : "; echo $jobDir
echo -n name"         : "; echo $name
echo -n threads"      : "; echo $allThreads
echo -n ram"          : "; echo $allRam
echo -n host"         : "; echo $(hostname); echo

# If a RUNME is present append the sampleNames onto the yaml, its OK if this is repeated
if test -f RUNME; then
  sns='sampleNames: '$(grep sampleNames RUNME | cut -f2)
  echo $sns >> *.yaml
fi

# Convert any ORA to fastq.gz and delete the oras
for x in *.ora
do
echo Converting $x to fastq.gz...
$dataBundle/app/orad/2.7.0/orad --force -N -t 8 -q $x && rm -f $x || echo ERROR: Ora decompression Failed
done
echo

# Launch snakemake
snakemake -p --cores $allThreads \
--stats $name"_snakemake.stats.json" \
--snakefile *.sm \
--configfile *.yaml \
--config \
name=$name \
allThreads=$allThreads \
allRam=$allRam

# Clean up prior to rsync back 
rm -rf .snakemake STARTED RESTARTED QUEUED FAILED *q.gz *.ora

## Svg DAG generation
# Replace the top snakemake line with 'snakemake --dag'
# Add onto the end '| dot -Tsvg > workflow.svg'

