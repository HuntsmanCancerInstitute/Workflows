# Bash script to run inside the container, no need to modify anything in this file

# 10 March 2022
# David.Nix@Hci.Utah.Edu
# Huntsman Cancer Institute

set -e
cd $jobDir
start=$(date +'%s'); rm -f FAILED COMPLETE QUEUED; touch STARTED

echo -e "\n---------- Starting -------- $((($(date +'%s') - $start)/60)) min"

# Node resources
name=${PWD##*/}
allThreads=$(nproc)
allRam=$(expr `free -g | grep -oP '\d+' | head -n 1` - 2)

# Print params
echo -n jobDir"       : "; echo $jobDir
echo -n name"         : "; echo $name
echo -n dataBundle"   : "; echo $dataBundle
echo -n threads"      : "; echo $allThreads
echo -n ram"          : "; echo $allRam
echo -n host"         : "; echo $(hostname)

# Look for required files
ls $dataBundle  *.sm *.yaml  > /dev/null

# Launch snakemake with these settings
snakemake -p --cores $allThreads \
--stats $name"_Hg38_snakemake.stats.json" \
--snakefile *.sm \
--configfile *.yaml \
--config \
name=$name \
allThreads=$allThreads \
allRam=$allRam

echo -e "\n---------- Complete! -------- $((($(date +'%s') - $start)/60)) min total"

# Final cleanup
mkdir -p RunScripts
mv -f dnaAlign*  RunScripts/
mv -f  *.yaml RunScripts/ &> /dev/null || true
cp slurm* Logs/ &> /dev/null || true
mv -f *snakemake.stats.json Logs/ &> /dev/null || true
rm -rf .snakemake STARTED RESTART* QUEUED slurm*

## Svg DAG generation
# Replace the top snakemake line with 'snakemake --dag'
# Add onto the end '| dot -Tsvg > workflow.svg'
