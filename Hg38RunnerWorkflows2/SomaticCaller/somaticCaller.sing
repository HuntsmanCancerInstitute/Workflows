# Bash script to run inside the container
# 21 Sept 2021
# David.Nix@Hci.Utah.Edu
# Huntsman Cancer Institute

set -e
cd $jobDir
name=${PWD##*/}
allThreads=$(nproc)
allRam=$(expr `free -g | grep -oP '\d+' | head -n 1` - 2)
tumorBed=`readlink -f tumor.bed.gz`
normalBed=`readlink -f normal.bed.gz`

# Read params and files
tumorAli=`readlink -f tumor.bam`
normalAli=`readlink -f normal.bam`
test -f $tumorAli || tumorAli=`readlink -f tumor.cram`
test -f $normalAli || normalAli=`readlink -f normal.cram`

# Print params
echo -n jobDir"     : "; echo $jobDir
echo -n name"       : "; echo $name
echo -n dataBundle" : "; echo $dataBundle
echo -n threads"    : "; echo $allThreads
echo -n ram"        : "; echo $allRam
echo -n host"       : "; echo $(hostname)
echo -n tumorAli"   : "; echo $tumorAli
echo -n normalAli"  : "; echo $normalAli
echo -n tumorBed"   : "; echo $tumorBed
echo -n normalBed"  : "; echo $normalBed; echo

# Make sure required files are present
ls $tumorAli $normalAli $tumorBed $normalBed > /dev/null

snakemake -p --cores $allThreads \
--stats $name"_Hg38_snakemake.stats.json" \
--snakefile *.sm \
--config \
allThreads=$allThreads \
allRam=$allRam \
regionsForAnalysis=$dataBundle/Bed/hg38StdChromLengths.bed.gz \
indexFasta=$dataBundle/GATKResourceBundleAug2021/Homo_sapiens_assembly38.fasta \
bpileup=$dataBundle//MpileupBkg/Hg38AvatarBkgnd/Idt/avatarIdt.bp.txt.gz \
queryDataDir=$dataBundle/GQuery/Data \
queryVcfFileFilter=Hg38/Somatic/Avatar/Vcf \
queryBedFileFilter=Hg38/Somatic/Avatar/Bed \
tumorBam=$tumorAli \
normalBam=$normalAli \
tumorBed=$tumorBed \
normalBed=$normalBed \
genomeBuild=Hg38 \
name=$name \
minTumorAlignmentDepth=20 \
minNormalAlignmentDepth=15 \
minTumorAltCount=3 \
minTumorAF=0.05 \
maxNormalAF=0.05 \
minTNRatio=3 \
minTNDiff=0.05 \
fdrTier=1 \
minBKZ=3 

# Notes
## regionsForAnalysis - a sorted, bgzipped, and tabix indexed bed file of regions to report variants. See https://github.com/samtools/htslib
## indexFasta - the same fasta file used in sample alignment. Also needed are the index xxx.fa.fai and xxx.dict files.
## mpileup - a multi sample background mpileup file of 10-25 normal bam files. See http://bioserver.hci.utah.edu/USeq/Documentation/cmdLnMenus.html#VCFBackgroundChecker
## query Data and Index dirs - are those created by the GQueryIndexer App for use by the VCFCallFrequency USeq tool.
## queryFileFilters - relative file path in the GQueryData dirs that determines what vcf and bed files to use in calculating each VcfCallFrequency.
## useq - launch each app to see cmd line options

# Replace first and last lines above with the following to get dag svg graph
	# /BioApps/Miniconda3/bin/snakemake --dag \
	# allRam=$allRam | dot -Tsvg > $name"_dag.svg"

